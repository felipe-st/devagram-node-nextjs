const api = require('./index')()
const run = async() => {
  const bucket = api.bucket({
    slug: 'next-merge-live-staging',
    read_key: 'crvax6wakPEGYgY3RBoAnVs1pgMJDx3hvORx3isg7KaOIy3jC7'
  })

  // Option 1
  const postsOldWay = await bucket.getObjects({
    query: {
      type: "posts"
    },
    props: "slug,title,metadata.cover_image.url",
    limit: 1
  })
  console.log(postsOldWay)

  // Option 2
  const shape = `{
    slug
    title
    metadata {
      cover_image {
        url
      }
      author {
        title
        metadata {
          image {
            url
          }
        }
      }
    }
  }`
  const postsNewWay = await bucket.objects.find({ type: "posts" })
  .props(shape)
  .limit(5)
  .skip(5)
  .sort('created_at')
  .done()
  console.log(postsNewWay)


  const updates = {
    metadata: {
      image: "1234asdf.jpg"
    }
  }
  await bucket.objects.updateOne({ id: '134adsf1234' }, { $set: updates });

  const params2 = {
    id: '134adsf1234',
    metafields: [
      {
        title: "Image",
        key: "image",
        value: "1234asdf.jpg",
        type: "file"
      }
    ];
  }
  await bucket.editObject(params);
}
run();